version: '2.1'
services:
  producer:
    build: ./producer/producer
    restart: on-failure
    #volumes:
    #  - ./consumer:/app
    networks:
      - backend
    env_file:
      - ./.env
        #stdin_open: true
        #tty: true
    depends_on:
      db:
        condition: service_healthy
  consumer:
    build: ./consumer/consumer
    restart: on-failure
    #volumes:
    #  - ./producer:/app
    networks:
      - backend
    env_file:
      - ./.env
        #stdin_open: true
        #tty: true
    depends_on:
      producer:
        condition: service_healthy
  db:
    image: postgres:12.4-alpine
    restart: unless-stopped
    networks:
      - backend
    env_file:
      - ./.env
    #user: "1000:1000"
    #environment:
    #  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #  POSTGRES_USER: ${POSTGRES_USER}
    #  POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/pgdata-dc:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 15
networks:
  backend:
    driver: bridge
